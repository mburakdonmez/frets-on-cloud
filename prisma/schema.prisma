generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model Album {
  created_at      DateTime @default(now()) @db.Timestamptz(6)
  title           String
  upc             String
  cover           String
  label           String
  duration        Int
  release_date    DateTime @db.Date
  record_type     String
  explicit_lyrics Boolean
  id              BigInt   @id @default(autoincrement())
  artist          BigInt
  Artist          Artist   @relation(fields: [artist], references: [id], onDelete: Cascade, map: "SongAlbum_artist_fkey")
  Track           Track[]
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model Artist {
  created_at DateTime @default(now()) @db.Timestamptz(6)
  name       String
  picture    String   @default("")
  nb_album   BigInt?
  id         BigInt   @id @default(autoincrement())
  Album      Album[]
  Track      Track[]
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model Songs {
  created_at DateTime @default(now()) @db.Timestamptz(6)
  created_by String
  id         String   @id @unique @default(dbgenerated("extensions.uuid_generate_v4()")) @db.Uuid
  track      BigInt
  Track      Track    @relation(fields: [track], references: [id], onDelete: Cascade)
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model Track {
  created_at      DateTime @default(now()) @db.Timestamptz(6)
  title           String
  title_short     String
  title_version   String
  isrc            String
  duration        Int
  disk_number     Int
  release_date    DateTime @db.Date
  explicit_lyrics Boolean
  preview         String
  bpm             Float
  gain            Float
  track_token     String
  id              BigInt   @id @default(autoincrement())
  album           BigInt
  artist          BigInt
  Songs           Songs[]
  Album           Album    @relation(fields: [album], references: [id], onDelete: Cascade)
  Artist          Artist   @relation(fields: [artist], references: [id], onDelete: Cascade)
}
